services:
  configurator:
    build:
      context: .
      dockerfile: .dockerfiles/Dockerfile-configurator
    container_name: configurator
    env_file: .env
    volumes:
      - ./data:/data
      - ./.env:/.env

  awg-server:
    build:
      context: .dockerfiles
      dockerfile: .dockerfiles/Dockerfile-awg-server
    container_name: awg-server
    ports:
      - "${AWG_ADMIN_PORT}:${AWG_ADMIN_PORT}"
      - "${AWG_PORT}:${AWG_PORT}/udp"

    privileged: true
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    devices:
      - /dev/net/tun
    volumes:
      - ./data:/data
      - ./.env:/.env
    restart: unless-stopped
    networks:
      - amneziawg-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  telegram-bot:
    build:
      context: .
      dockerfile: .dockerfiles/Dockerfile-telegram-bot
    container_name: tg-bot
    volumes:
      - ./.env:/.env
    restart: unless-stopped
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}

  shadowbox:
    image: quay.io/outline/shadowbox:stable
    container_name: shadowbox
    network_mode: host
    restart: always
    logging:
      driver: local

    volumes:
      - ./data:/data
      - ./.env:/.env
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.scope=outline"

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    logging:
      driver: local
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup --label-enable --scope=outline --tlsverify --interval ${WATCHTOWER_REFRESH_SECONDS:-3600}
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.scope=outline"

networks:
  amneziawg-network:
    driver: bridge
